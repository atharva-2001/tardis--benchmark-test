name: run-benchmarks

on:
  push:
    branches:
    - main

  pull_request:
    types: [labeled, synchronize]
  pull_request_target:
    branches:
      - main

  workflow_dispatch:
  workflow_call:
    

defaults:
  run:
    shell: bash -l {0}

# permissions:
#       pages: write      # to deploy to Pages
#       id-token: write   # to verify the deployment originates from an appropriate source
  
jobs:
  build:
    # if: contains(github.event.pull_request.labels.*.name, 'run-benchmarks')
    if: "!contains(github.event.head_commit.message, 'bench')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - run: git fetch --all
    
    - uses: actions/setup-python@v4
      name: python
      with:
        python-version: '3.8' 
    
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-activate-base: true
        activate-environment: ""
        
    - name: Install asv
      run: pip install asv
    
    - run: asv machine --yes
    
    - run: git branch

    - name: Run benchmarks for last 10 commits if not PR
      if: github.event_name != 'pull_request'
      run: |
        git log -n 10  --pretty=format:"%H" >> tag_commits.txt
        asv run HASHFILE:tag_commits.txt -e
    
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"
  
    - name: Compare HEAD with master if PR
      if: github.event_name == 'pull_request'
      continue-on-error: true
      run: |
        asv continuous --factor 1.005 ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}  | tee asv-output.log  
        if grep -q Traceback asv-output.log; then 
          echo "Some benchmarks have errors!"
        fi
      
    # - run: asv publish
    - run: git status

    - run: rm -r .asv/env

    - name: Pushes to another repository
      if: github.event_name != 'pull_request'
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: .asv
        destination-github-username: atharva-2001
        destination-repository-name: tardis-benchmark-test-results
        target-directory: .asv
        user-email: aryaatharva18@gmail.com
        target-branch: main
    
    - run: echo ${{ github.event.client_payload.pull_request.number }}
    
    - name: Get logs
      id: asv_logs
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "text<<$EOF" >> $GITHUB_OUTPUT
        # LOGS_C=$(<asv-output.log)
        # echo $LOGS_C
        # echo "LOGS=$LOGS_C" >> $GITHUB_OUTPUT
        echo "LOGS=$( cat asv-output.log)" >> $GITHUB_ENV
        echo "$EOF" >> $GITHUB_OUTPUT
        # cat asv-output.log

    - name: Post comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v2
      with:
        token:  ${{ secrets.API_TOKEN_GITHUB }}
        issue-number: ${{ github.event.pull_request.number }}
        # edit-mode: replace
        # body-file: asv-output.log  
        body: |
          *\*beep\* \*bop\**
          Hi human, 
          I ran benchmarks as you asked comparing master (${{ github.event.pull_request.base.sha }}) and the latest commit (${{ github.event.pull_request.head.sha }}). 
          Here are the logs produced by ASV.
          Results can also be downloaded as artifacts. 
          <details>
            <summary>ASV Logs</summary>
            ${{ steps.asv_logs.outputs.LOGS }}
          </details>

    # - uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     token: ${{ secrets.DEPLOY_PAT }}
        # repository: atharva-2001/tardis-benchmark-test-results

        # add_options: '-A'


    # - uses: actions/upload-artifact@v2
    #   if: always()
    #   with:
    #     name: asv-benchmark-results-ubuntu-latest2
    #     path: .asv/results

    # - uses: actions/configure-pages@v1
    # - uses: actions/upload-pages-artifact@v1
    #   with:
    #     path: .asv/html

    # - name: Deploy to GitHub Pages
    #   id: deployment
    #   uses: actions/deploy-pages@v1
      # permissions:
      #   pages: write      # to deploy to Pages
      #   id-token: write   # to verify the deployment originates from an appropriate source
  # publish:
  #   uses: ./.github/workflows/publish.yml
    # needs: build
    # permissions:
    #   pages: write      # to deploy to Pages
    #   id-token: write
    # runs-on: ubuntu-latest
    # steps:
    #   - uses: actions/checkout@v2
    #   - uses: actions/configure-pages@v1
    #   - uses: actions/upload-pages-artifact@v1
    #     with:
    #       path: .asv/html

    #   - name: Deploy to GitHub Pages
    #     id: deployment
    #     uses: actions/deploy-pages@v1
    