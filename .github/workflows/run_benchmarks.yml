name: run-benchmarks

on:
  push:
    branches:
    - main

  pull_request:
  workflow_dispatch:
  workflow_call:
    

defaults:
  run:
    shell: bash -l {0}

# permissions:
#       pages: write      # to deploy to Pages
#       id-token: write   # to verify the deployment originates from an appropriate source
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - run: git fetch --all
    
    - uses: actions/setup-python@v4
      name: python
      with:
        python-version: '3.8' 
    
    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-activate-base: true
        activate-environment: ""
        
    - name: Install asv
      run: pip install asv
    
    - run: asv machine --yes
    
    - run: git branch

    - name: Run benchmarks for last 10 commits if not PR
      if: github.event_name != 'pull_request'
      run: |
        git log -n 10  --pretty=format:"%H" >> tag_commits.txt
        asv run HASHFILE:tag_commits.txt -e
  
    - name: Compare HEAD with master if PR
      if: github.event_name == 'pull_request'
      continue-on-error: true
      run: |
        asv continuous --show-stderr --factor 1.005 ${{ github.event.pull_request.base.sha }} ${GITHUB_SHA}  | tee asv-output.log  
        if grep -q Traceback asv-output.log; then 
          echo "Some benchmarks have errors!"
        fi
      
    # - run: asv publish
    - run: git status

    # - run: |
    #     git config -l | grep 'http\..*\.extraheader' | cut -d= -f1 | \
    #     xargs -L1 git config --unset-all

    # - name: push to another repo pat
    #   env: 
    #     API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
    #   run: |
    #     mkdir results-repo
    #     git clone https://$API_TOKEN_GITHUB@github.com/atharva-2001/tardis-benchmark-test-results results-repo
        
    #     cd results-repo
    #     cp -r ../.asv/html ../.asv/results  .
    #     git config --global user.email "aryaa_1@rknec.edu"
    #     git config --global user.name "atharva-2001"
    #     git add .
    #     git commit -m "add result files"
    #     git remote -v
    #     git push origin main

        
    # - name: Checkout repository
    #   uses: actions/checkout@v2
    #   with:
    #     repository: atharva-2001/tardis-benchmark-test-results
    #     path: tbt_results

    # - run: tree  ../ -L 4
    
    # - run: cp -r ../.asv .
    #   working-directory: tbt_results

    # - name: Create and push changes
    #   working-directory: tbt_results
    #   run: |
    #     git config --global user.email "aryaatharva18@gmail.com"
    #     git config --global user.name "Atharva Arya"
    #     git add .
    #     git commit -m "Automated changes"
    #     gh auth login --with-token <<< "${{ secrets.DEPLOY_PAT }}"
    #     gh repo view
    #     git push -u origin HEAD
        
    # - name: Create and push changes
    #   run: |
    #     git config user.name github-actions
    #     git config user.email github-actions@github.com
    #     git add .
    #     git commit -m "Automated changes"
    #     git push
    
    - run: rm -r .asv/env

    - name: Pushes to another repository
      if: github.event_name != 'pull_request'
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: .asv
        destination-github-username: atharva-2001
        destination-repository-name: tardis-benchmark-test-results
        target-directory: .asv
        user-email: aryaatharva18@gmail.com
        target-branch: mains
    
    - run: echo ${{ github.event.client_payload.pull_request.number }}
    
    - name: Post comment
      if: github.event_name == 'pull_request'
      uses: peter-evans/create-or-update-comment@v2
      with:
        token:  ${{ secrets.API_TOKEN_GITHUB }}
        issue-number: ${{ github.event.pull_request.number }}
        # edit-mode: replace
        body-file: asv-output.log  

    # - uses: stefanzweifel/git-auto-commit-action@v4
    #   with:
    #     token: ${{ secrets.DEPLOY_PAT }}
        # repository: atharva-2001/tardis-benchmark-test-results

        # add_options: '-A'


    # - uses: actions/upload-artifact@v2
    #   if: always()
    #   with:
    #     name: asv-benchmark-results-ubuntu-latest2
    #     path: .asv/results

    # - uses: actions/configure-pages@v1
    # - uses: actions/upload-pages-artifact@v1
    #   with:
    #     path: .asv/html

    # - name: Deploy to GitHub Pages
    #   id: deployment
    #   uses: actions/deploy-pages@v1
      # permissions:
      #   pages: write      # to deploy to Pages
      #   id-token: write   # to verify the deployment originates from an appropriate source
  # publish:
  #   uses: ./.github/workflows/publish.yml
    # needs: build
    # permissions:
    #   pages: write      # to deploy to Pages
    #   id-token: write
    # runs-on: ubuntu-latest
    # steps:
    #   - uses: actions/checkout@v2
    #   - uses: actions/configure-pages@v1
    #   - uses: actions/upload-pages-artifact@v1
    #     with:
    #       path: .asv/html

    #   - name: Deploy to GitHub Pages
    #     id: deployment
    #     uses: actions/deploy-pages@v1
    